{"version":3,"sources":["./src/app/admin/session/components/add-session/add-session.component.ts","./src/app/admin/session/components/add-session/add-session.component.html","./src/app/admin/session/components/edit-session/edit-session.component.ts","./src/app/admin/session/components/edit-session/edit-session.component.html","./src/app/admin/session/components/session/session.component.ts","./src/app/admin/session/components/session/session.component.html","./src/app/admin/session/components/show-session/show-session.component.ts","./src/app/admin/session/components/show-session/show-session.component.html","./src/app/admin/session/session-routing.module.ts","./src/app/admin/session/session.module.ts"],"names":[],"mappings":"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","file":"session-session-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { SessionService } from 'src/app/admin/services/session.service';\nimport { CoursService } from 'src/app/admin/services/cours.service';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport countries from 'src/app/countries.json';\nimport { CategorieService } from 'src/app/admin/services/categorie.service';\n@Component({\n  selector: 'app-add-session',\n  templateUrl: './add-session.component.html',\n  styleUrls: ['./add-session.component.css']\n})\nexport class AddSessionComponent implements OnInit {\n  debut: NgbDateStruct;\n  fin: NgbDateStruct;\n  SessionForm: FormGroup;\n  submitted = false;\n  displayRef = false;\n  displayVersion = false;\n  displayCountry = false;\n  cours = [];\n  testcours = [];\n  filtercours = [];\n  categories = [];\n  versions = [];\n  allCours = [];\n  todayDate;\n  verif = false;\n  title = 'json-file-read-angular';\n  isLoading = false;\n  public countryList: { name: string }[] = countries;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    private coursService: CoursService,\n    private sessionService: SessionService,\n    private categorieService: CategorieService\n  ) { }\n\n  ngOnInit(): void {\n    const current = new Date();\n    this.todayDate = {\n  year: current.getFullYear(),\n  month: current.getMonth() + 1,\n  day: current.getDate()\n};\n\n    this.fetchCategorie();\n    this.fetchCours();\n    this.fetchAllCours();\n    this.SessionForm = this.formBuilder.group({\n    ref_formation: ['', [Validators.required]],\n    version_session: ['', ],\n    cat_formation: ['', ],\n    date_debut: ['', [Validators.required]],\n    type: ['', [Validators.required]],\n    langue: ['', [Validators.required]],\n    lieu: ['', ],\n    etat_session: ['en attente de confirmation', [Validators.required]]\n  });\n  }\n\n   // convenience getter for easy access to form fields\n   get f()\n    { return this.SessionForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.SessionForm.invalid) {\n        return;\n    }\n    this.isLoading = true;\n    const DateDebut = this.SessionForm.value.date_debut;\n    const myDateDebut = new Date(DateDebut.year, DateDebut.month - 1, DateDebut.day);\n    const valueDateDebut = moment(myDateDebut).format('YYYY-MM-DD');\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.SessionForm.invalid) {\n        return;\n    }\n    let  filterIdCour = [];\n    if (this.versions[0].version !== null && this.versions[0].version !== '') {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation && idcour.version === this.SessionForm.value.version_session;\n      });\n    } else {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation;\n      });\n    }\n    const session = {\n      id_cour: filterIdCour[0].id,\n      date_debut: valueDateDebut,\n      type: this.SessionForm.value.type,\n      langue: this.SessionForm.value.langue,\n      lieu: this.SessionForm.value.lieu || null,\n      etat_session: this.SessionForm.value.etat_session\n    };\n    this.sessionService.saveSession(session).subscribe((resp: any) => {\n      if (!resp.success) {\n        this.toastr.error('Erreur', resp.error);\n        this.isLoading = false;\n      } else {\n        this.toastr.success('Succès');\n        this.router.navigate(['/admin/list-session-cours-examen/session-cours/list-cours']);\n      }\n    });\n}\n\n   onchange(e){\n     if (e) {\n      this.displayRef = true;\n      this.displayVersion = false;\n      this.SessionForm.patchValue({\n        ref_formation: '',\n        version_session: ''\n      });\n      this.submitted = false;\n      this.filtercours = this.testcours.filter((cour: any) => {\n        return cour.categorie === this.SessionForm.value.cat_formation;\n      });\n      this.cours = this.filtercours.map((cour: any) => {\n        return cour;\n      });\n     }\n}\nchangeRef(e){\nif (e) {\n  this.versions = [];\n  this.SessionForm.patchValue({\n    version_session: '',\n  });\n  this.submitted = false;\n  this.coursService.getAllVersionByRef(this.SessionForm.value.ref_formation).subscribe((resp: any) => {\n    this.versions = resp.result;\n    if (this.versions[0].version !== null && this.versions[0].version !== '' ) {\n      this.displayVersion = true;\n      this.SessionForm.get('version_session').setValidators(Validators.required);\n    } else {\n     this.SessionForm.get('version_session').clearValidators();\n     this.displayVersion = false;\n     this.SessionForm.patchValue({\n      version_session: '',\n     });\n    }\n  });\n}\n}\nfetchCours(){\n  this.coursService.getAllDistinctCours().subscribe((data: any) => {\n    this.testcours = data.result;\n    this.cours = data.result;\n  });\n }\n fetchAllCours(){\n  this.coursService.getAllCours().subscribe((resp: any) => {\n    this.allCours = resp.results;\n  });\n }\n fetchCategorie(){\n  this.categorieService.getAllCategories().subscribe((data: any) => {\n    this.categories = data.results;\n  });\n }\n changeType(e){\n   if (e) {\n    if (this.SessionForm.value.type === 'présentielle') {\n      this.displayCountry = true;\n      this.SessionForm.get('lieu').setValidators(Validators.required);\n    } else {\n     this.SessionForm.get('lieu').clearValidators();\n     this.displayCountry = false;\n     this.SessionForm.patchValue({\n       lieu: '',\n     });\n    }\n   }\n }\n}\n","<div class=\"content-wrapper\">\n\n    <section class=\"content\">\n\n      <div class=\"container-fluid\">\n        <div style=\"padding-top: 50px !important;\" class=\" text-right mt-5\">\n          <button routerLink=\"/admin/list-session-cours-examen/session-cours/list-cours\" class=\"btn btn-success mr-2\">\n            <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n          </button>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-sm-12 text-center mb-4\">\n            <h1 class=\"add-title\"  >Ajouter une session</h1>\n          </div>\n            <div class=\"col-12 col-md-6 mx-auto\">\n                <form  [formGroup]=\"SessionForm\" (ngSubmit)=\"onSubmit()\" >\n                  <div  class=\"input-group mb-3\">\n                    <nz-select   nzPlaceHolder=\"Choisir une catégorie\" (ngModelChange)=\"onchange($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"cat_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.cat_formation.errors }\" >\n                      <nz-option *ngFor=\"let item of categories\" nzLabel=\"{{item.nom_categorie}}\" [nzValue]=\"item.nom_categorie\"></nz-option>\n                    </nz-select>\n                    <div *ngIf=\"submitted && f.cat_formation.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.cat_formation.errors.required\">catégorie est obligatoire</div>\n                  </div>\n                  </div>\n\n                      <div *ngIf=\"displayRef\" class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une référence\" (ngModelChange)=\"changeRef($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"ref_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.ref_formation.errors }\" >\n                          <nz-option *ngFor=\"let item of cours\" nzLabel=\"{{item.ref_form}}\" [nzValue]=\"item.ref_form\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.ref_formation.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.ref_formation.errors.required\">Référence est obligatoire</div>\n                      </div>\n                      </div>\n                       <div *ngIf=\"displayVersion\" class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une version\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"version_session\" [ngClass]=\"{ 'is-invalid': submitted && f.version_session.errors }\" >\n                          <nz-option *ngFor=\"let item_ses of versions\" nzLabel=\"{{item_ses.version}}\" [nzValue]=\"item_ses.version\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.version_session.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.version_session.errors.required\">version est obligatoire</div>\n                      </div>\n                      </div>\n                      <div class=\"input-group mb-3\">\n                        <input class=\"form-control form-control-sm\" autocomplete=\"off\"  formControlName=\"date_debut\" (click)=\"d.toggle()\" placeholder=\"Date de début\"  [ngClass]=\"{ 'is-invalid': submitted && f.date_debut.errors }\"\n                               name=\"d\" [minDate]=\"todayDate\"  ngbDatepicker #d=\"ngbDatepicker\">\n                        <div class=\"input-group-append\">\n                          <button class=\"btn btn-outline-secondary calendar btn-sm\" (click)=\"d.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                        </div>\n                        <div *ngIf=\"submitted && f.date_debut.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.date_debut.errors.required\">Date de début est obligatoire</div>\n                      </div>\n                      </div>\n\n                      <div  class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir un type\" (ngModelChange)=\"changeType($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"type\" [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" >\n                          <nz-option  nzLabel=\"Présentielle\" nzValue=\"présentielle\"></nz-option>\n                          <nz-option  nzLabel=\"Virtuelle\" nzValue=\"virtuelle\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.type.errors.required\">type est obligatoire</div>\n                      </div>\n                      </div>\n                      <div  class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une langue\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"langue\" [ngClass]=\"{ 'is-invalid': submitted && f.langue.errors }\" >\n                          <nz-option  nzLabel=\"Français\" nzValue=\"français\"></nz-option>\n                          <nz-option  nzLabel=\"Anglais\" nzValue=\"anglais\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.langue.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.langue.errors.required\">langue est obligatoire</div>\n                      </div>\n                      </div>\n\n                      <div *ngIf=\"displayCountry\" class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir un pays\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"lieu\" [ngClass]=\"{ 'is-invalid': submitted && f.lieu.errors }\" >\n                        <nz-option *ngFor=\"let item of countryList\" nzLabel=\"{{item.name  |titlecase}}\" [nzValue]=\"item.name\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.lieu.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.lieu.errors.required\">Pays est obligatoire</div>\n                    </div>\n                    </div>\n\n                      <div  class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une statut de session\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"etat_session\" [ngClass]=\"{ 'is-invalid': submitted && f.etat_session.errors }\" >\n                          <nz-option  nzLabel=\"En attente de confirmation\" nzValue=\"en attente de confirmation\"></nz-option>\n                          <nz-option  nzLabel=\"Confirmée\" nzValue=\"confirmée\"></nz-option>\n                          <nz-option  nzLabel=\"Reportée\" nzValue=\"reportée\"></nz-option>\n                          <nz-option  nzLabel=\"Annulée\" nzValue=\"annulée\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.etat_session.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.etat_session.errors.required\">statut de session est obligatoire</div>\n                      </div>\n                      </div>\n                    <div class=\"row\">\n\n                      <!-- /.col -->\n                      <div class=\"col-12 mb-4 text-center\">\n                        <button  type=\"submit\"  [nzLoading]=\"isLoading\" nz-button nzType=\"primary\" nzBlock>Enregistrer</button>\n                      </div>\n                      <!-- /.col -->\n                    </div>\n                  </form>\n\n            </div>\n        </div>\n      </div>\n  </section>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CoursService } from 'src/app/admin/services/cours.service';\nimport { SessionService } from 'src/app/admin/services/session.service';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport countries from 'src/app/countries.json';\nimport { CategorieService } from 'src/app/admin/services/categorie.service';\nimport { PlanningService } from 'src/app/admin/services/planning.service';\n@Component({\n  selector: 'app-edit-session',\n  templateUrl: './edit-session.component.html',\n  styleUrls: ['./edit-session.component.css']\n})\nexport class EditSessionComponent implements OnInit {\n  debut: NgbDateStruct;\n  fin: NgbDateStruct;\n  Model: NgbDateStruct;\n  SessionForm: FormGroup;\n  submitted = false;\n  cours = [];\n  sessionEmail = [];\n  id;\n  newDateDebut: any;\n  Result;\n  year: any;\n  month: any;\n  day: any;\n  a: any;\n  //\n  displayRef = false;\n  displayVersion = false;\n  displayCountry = false;\n  allCours = [];\n  filtercours = [];\n  categories = [];\n  versions = [];\n  filtcategorie = [];\n  plannigBySession = [];\n  dateTodayVerif;\n  todayDate;\n  title = 'json-file-read-angular';\n  isLoading = false;\n  public countryList: {name: string }[] = countries;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    private coursService: CoursService,\n    private sessionService: SessionService,\n    private route: ActivatedRoute,\n    private categorieService: CategorieService,\n    private planningService: PlanningService,\n  ) { }\n\n   ngOnInit(): void {\n    const current = new Date();\n    this.todayDate = {\n  year: current.getFullYear(),\n  month: current.getMonth() + 1,\n  day: current.getDate()\n};\n    this.dateTodayVerif = moment(new Date()).add(-1, 'days').format('YYYY-MM-DD');\n    this.fetchCategorie();\n    this.fetchAllCours();\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.fetchSessionWithEmail(this.id);\n    this.sessionService.getSessionById(this.id).subscribe( async (resp: any) => {\n      this.Result = resp.result[0];\n      this.newDateDebut = moment(this.Result.date_debut).format('YYYY-MM-DD');\n      this.a = new Date(this.Result.date_debut);\n      this.year = this.a.getFullYear();\n      this.month = this.a.getMonth() + 1;\n      this.day = this.a.getDate();\n      this.debut = {\n        year: this.year,\n        month: this.month,\n        day: this.day\n      };\n      this.defautfetchCours();\n      this.defautversion();\n      this.defaultDisplayCountry();\n      this.SessionForm.patchValue({\n        cat_formation: this.Result.categorie,\n        ref_formation: this.Result.ref_formation,\n        version_session: this.Result.version_session,\n        type: this.Result.type,\n        date_debut: this.debut,\n        langue: this.Result.langue,\n        lieu: this.Result.lieu,\n        etat_session: this.Result.etat_session\n      });\n    });\n    this.SessionForm = this.formBuilder.group({\n      cat_formation: ['', ],\n      ref_formation: ['', [Validators.required]],\n      date_debut: ['', [Validators.required]],\n      type: ['', [Validators.required]],\n      version_session: ['', ],\n      langue: ['', [Validators.required]],\n      lieu: ['', ],\n      etat_session: ['en attente de confirmation', [Validators.required]]\n    });\n  }\n\n   // convenience getter for easy access to form fields\n   get f()\n    { return this.SessionForm.controls; }\n\n   onSubmit(): void {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.SessionForm.invalid) {\n        return;\n    }\n    this.isLoading = true;\n    const DateDebut = this.SessionForm.value.date_debut;\n    const myDateDebut = new Date(DateDebut.year, DateDebut.month - 1, DateDebut.day);\n    const valueDateDebut = moment(myDateDebut).format('YYYY-MM-DD');\n    let  filterIdCour = [];\n    if (this.versions[0].version !== null && this.versions[0].version !== '') {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation && idcour.version === this.SessionForm.value.version_session;\n      });\n    } else {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation ;\n      });\n    }\n    const session = {\n      id_cour: filterIdCour[0].id,\n      date_debut: valueDateDebut,\n      type: this.SessionForm.value.type,\n      langue: this.SessionForm.value.langue,\n      lieu: this.SessionForm.value.lieu || null,\n      etat_session: this.SessionForm.value.etat_session\n    };\n    if (this.dateTodayVerif < moment(this.Result.date_fin).format('YYYY-MM-DD')) {\n      this.sessionService.updateSession(this.id, session).subscribe( async (resp: any) => {\n        if (!resp.success) {\n          this.toastr.error('Erreur', resp.error);\n          this.isLoading = false;\n        } else {\n          if (this.sessionEmail[0].email && session.etat_session !== 'en cours' && session.etat_session !== 'clôturée' ) {\n            const NEWdateD = new Date(session.date_debut);\n            const convertduree: number = this.sessionEmail[0].duree - 1;\n            NEWdateD.setDate(NEWdateD.getDate() + convertduree);\n            if (this.versions[0].version !== null && this.versions[0].version !== '') {\n              // rien\n            } else {\n              this.SessionForm.value.version_session = null;\n            }\n            if (session.etat_session === 'annulée' || session.etat_session === 'reportée') {\n              this.plannigBySession[0].statut_f = 'Annulée';\n            }\n            if (session.etat_session === 'confirmée') {\n              this.plannigBySession[0].statut_f = 'Confirmée';\n            }\n            if (this.SessionForm.value.type === 'présentielle') {\n              const resuls = await this.envoyerEmail(this.sessionEmail[0].email, this.SessionForm.value.ref_formation,\n                 moment(session.date_debut).format('DD-MM-YYYY'), moment(NEWdateD).format('DD-MM-YYYY'),\n               session.type, session.langue, this.plannigBySession[0].address,\n              this.SessionForm.value.version_session, this.plannigBySession[0].statut_f, session.etat_session,\n              this.sessionEmail[0].name, filterIdCour[0].designation, session.lieu, this.plannigBySession[0].contact_for,\n                this.plannigBySession[0].numero_for, this.plannigBySession[0].mail_contact, this.plannigBySession[0].nbr_participant);\n              } else {\n                const resuld = await this.envoyerEmailDistancielle(this.sessionEmail[0].email, this.SessionForm.value.ref_formation,\n                  moment(session.date_debut).format('DD-MM-YYYY'), moment(NEWdateD).format('DD-MM-YYYY'),\n                session.type, session.langue, this.SessionForm.value.version_session,\n                 this.plannigBySession[0].statut_f, session.etat_session,\n               this.sessionEmail[0].name, filterIdCour[0].designation, this.plannigBySession[0].contact_for,\n                 this.plannigBySession[0].numero_for, this.plannigBySession[0].mail_contact, this.plannigBySession[0].nbr_participant);\n              }\n          }\n          if (this.sessionEmail[0].email && session.etat_session !== 'en cours' && session.etat_session !== 'clôturée' &&\n           session.etat_session !== 'confirmée' && session.etat_session !== 'en attente de confirmation') {\n             const p = {\n               id: this.plannigBySession[0].id,\n               statut_f: 'annulée'\n             };\n             this.planningService.editPlanningForSession(p).subscribe((d: any) => {\n              if (!d.success) {\n                this.toastr.error('Erreur', d.error);\n              }});\n          }\n          if (this.sessionEmail[0].email && session.etat_session === 'confirmée') {\n             const pl = {\n               id: this.plannigBySession[0].id,\n               statut_f: 'Confirmée'\n             };\n             this.planningService.editPlanningForSession(pl).subscribe((d: any) => {\n              if (!d.success) {\n                this.toastr.error('Erreur', d.error);\n              }});\n          }\n          this.toastr.success('Succès');\n          this.router.navigate(['/admin/list-session-cours-examen/session-cours/list-cours']);\n        }\n      });\n   }\n  }\n   fetchAllCours(){\n    this.coursService.getAllCours().subscribe((resp: any) => {\n      this.allCours = resp.results;\n    });\n   }\n   defautfetchCours() {\n    this.coursService.getAllDistinctCours().subscribe((data: any) => {\n      this.cours = data.result;\n      this.filtercours = this.cours.filter((cour: any) => {\n        return cour.categorie === this.Result.categorie;\n      });\n    });\n }\n   fetchSessionWithEmail(id) {\n    this.sessionService.getSessionWithEmailById(id).subscribe((data: any) => {\n      this.sessionEmail = data.result;\n    });\n    this.planningService.getPlanningUpdatedByIdSession(this.id).subscribe( (resp: any) => {\n      this.plannigBySession = resp.result;\n  });\n   }\n   fetchCategorie(){\n    this.categorieService.getAllCategories().subscribe((data: any) => {\n      this.categories = data.results;\n    });\n   }\n   onchange(e){\n     if (e) {\n      this.submitted = false;\n      this.displayVersion = false;\n      this.SessionForm.patchValue({\n        ref_formation: '',\n        version_session: '',\n      });\n      this.filtercours = [];\n      this.filtercours = this.cours.filter((cour: any) => {\n        return cour.categorie === this.SessionForm.value.cat_formation;\n      });\n     }\n  }\n  changeRef(e){\n    if (e && this.SessionForm.value.ref_formation) {\n      this.submitted = false;\n      this.versions = [];\n      this.SessionForm.patchValue({\n        version_session: '',\n      });\n      this.coursService.getAllVersionByRef(this.SessionForm.value.ref_formation).subscribe((resp: any) => {\n        this.versions = resp.result;\n        if (this.versions[0].version !== null && this.versions[0].version !== '') {\n          this.displayVersion = true;\n          this.SessionForm.get('version_session').setValidators(Validators.required);\n        } else {\n          this.SessionForm.get('version_session').clearValidators();\n          this.displayVersion = false;\n        }\n      });\n    }\n\n  }\n  defautversion(){\n    this.versions = [];\n    this.coursService.getAllVersionByRef(this.Result.ref_formation).subscribe((resp: any) => {\n      this.versions = resp.result;\n      if (this.versions[0].version !== null && this.versions[0].version !== '') {\n        this.displayVersion = true;\n        this.SessionForm.get('version_session').setValidators(Validators.required);\n      } else {\n        this.SessionForm.get('version_session').clearValidators();\n        this.displayVersion = false;\n      }\n    });\n  }\n  changeType(e){\n    if (e) {\n      if (this.SessionForm.value.type === 'présentielle') {\n        this.displayCountry = true;\n        this.SessionForm.get('lieu').setValidators(Validators.required);\n      } else {\n       this.displayCountry = false;\n       this.SessionForm.get('lieu').clearValidators();\n       this.SessionForm.patchValue({\n         lieu: '',\n       });\n      }\n    }\n\n  }\n  defaultDisplayCountry(){\n    if (this.Result.type === 'présentielle') {\n      this.displayCountry = true;\n      this.SessionForm.get('lieu').setValidators(Validators.required);\n    } else {\n     this.displayCountry = false;\n     this.SessionForm.get('lieu').clearValidators();\n     this.SessionForm.patchValue({\n       lieu: '',\n     });\n    }\n  }\n  envoyerEmail(email, ref, dated, datef, type, langue, lieu, version, etat , etatsession,\n    namef, namecours, pays, contact, numeroc, mailc, nbrpartic){\n    this.sessionService.envoyerEmailFormateur(email, ref, dated, datef, type, langue, lieu,\n      version, etat, etatsession,  namef, namecours, pays, contact, numeroc, mailc, nbrpartic).subscribe((resp: any) => {\n    if (!resp.success) {\n        this.toastr.error('Error', resp.error);\n      }\n    });\n   }\n   envoyerEmailDistancielle(email, ref, dated, datef, type, langue, version, etat , etatsession,\n    namef, namecours, contact, numeroc, mailc, nbrpartic){\n    this.sessionService.envoyerEmailFormateurTypeDistancielle(email, ref, dated, datef, type, langue, version, etat , etatsession,\n      namef, namecours, contact, numeroc, mailc, nbrpartic).subscribe((resp: any) => {\n    if (!resp.success) {\n        this.toastr.error('Error', resp.error);\n      }\n    });\n   }\n}\n","<div class=\"content-wrapper\">\n\n    <section class=\"content\">\n\n      <div class=\"container-fluid\">\n        <div style=\"padding-top: 50px !important;\" class=\" text-right mt-5\">\n          <button routerLink=\"/admin/list-session-cours-examen/session-cours/list-cours\" class=\"btn btn-success mr-2\">\n            <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n          </button>\n        </div>\n        <div class=\"row mb-2\">\n          <div class=\"col-sm-12 text-center  mb-4\">\n            <h1 class=\"edit-title\"  > Modifier une session</h1>\n          </div>\n            <div class=\"col-12 col-md-6 mx-auto\">\n                <form  [formGroup]=\"SessionForm\" (ngSubmit)=\"onSubmit()\" >\n                  <div  class=\"input-group mb-3\">\n                    <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une catégorie\" (ngModelChange)=\"onchange($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"cat_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.cat_formation.errors }\" >\n                      <nz-option *ngFor=\"let item of categories\" nzLabel=\"{{item.nom_categorie}}\" [nzValue]=\"item.nom_categorie\"></nz-option>\n                    </nz-select>\n                    <div *ngIf=\"submitted && f.cat_formation.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.cat_formation.errors.required\">catégorie est obligatoire</div>\n                  </div>\n                  </div>\n                  <div  class=\"input-group mb-3\">\n                    <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une référence\" (ngModelChange)=\"changeRef($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"ref_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.ref_formation.errors }\" >\n                      <nz-option *ngFor=\"let itemRef of filtercours\" nzLabel=\"{{itemRef.ref_form}}\" [nzValue]=\"itemRef.ref_form\"></nz-option>\n                    </nz-select>\n                    <div *ngIf=\"submitted && f.ref_formation.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.ref_formation.errors.required\">Référence est obligatoire</div>\n                  </div>\n                  </div>\n                  <div *ngIf=\"displayVersion\" class=\"input-group mb-3\">\n                    <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une version\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"version_session\" [ngClass]=\"{ 'is-invalid': submitted && f.version_session.errors }\" >\n                      <nz-option *ngFor=\"let item_ses of versions\" nzLabel=\"{{item_ses.version}}\" [nzValue]=\"item_ses.version\"></nz-option>\n                    </nz-select>\n                    <div *ngIf=\"submitted && f.version_session.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.version_session.errors.required\">version est obligatoire</div>\n                  </div>\n                  </div>\n\n                      <div class=\"input-group mb-3\">\n                        <input class=\"form-control form-control-sm\"   formControlName=\"date_debut\"  (click)=\"d.toggle()\"    [ngClass]=\"{ 'is-invalid': submitted && f.date_debut.errors }\"\n                               name=\"dp\" [minDate]=\"todayDate\" ngbDatepicker #d=\"ngbDatepicker\">\n                        <div class=\"input-group-append\">\n                          <button class=\"btn btn-outline-secondary calendar btn-sm\" (click)=\"d.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                        </div>\n                        <div *ngIf=\"submitted && f.date_debut.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.date_debut.errors.required\">Date de début est obligatoire</div>\n                      </div>\n                      </div>\n                      <div  class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir un type\" (ngModelChange)=\"changeType($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"type\" [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" >\n                          <nz-option  nzLabel=\"Présentielle\" nzValue=\"présentielle\"></nz-option>\n                          <nz-option  nzLabel=\"Virtuelle\" nzValue=\"virtuelle\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.type.errors.required\">type est obligatoire</div>\n                      </div>\n                      </div>\n                      <div  class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une langue\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"langue\" [ngClass]=\"{ 'is-invalid': submitted && f.langue.errors }\" >\n                          <nz-option  nzLabel=\"Français\" nzValue=\"français\"></nz-option>\n                          <nz-option  nzLabel=\"Anglais\" nzValue=\"anglais\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.langue.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.langue.errors.required\">langue est obligatoire</div>\n                      </div>\n                      </div>\n                      <div *ngIf=\"displayCountry\" class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir un pays\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"lieu\" [ngClass]=\"{ 'is-invalid': submitted && f.lieu.errors }\" >\n                          <nz-option *ngFor=\"let item of countryList\" nzLabel=\"{{item.name  |titlecase}}\" [nzValue]=\"item.name\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.lieu.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.lieu.errors.required\">Pays est obligatoire</div>\n                      </div>\n                      </div>\n                      <div  class=\"input-group mb-3\">\n                        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une statut de session\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"etat_session\" [ngClass]=\"{ 'is-invalid': submitted && f.etat_session.errors }\" >\n                          <nz-option  nzLabel=\"En attente de confirmation\" nzValue=\"en attente de confirmation\"></nz-option>\n                          <nz-option  nzLabel=\"Confirmée\" nzValue=\"confirmée\"></nz-option>\n                          <nz-option  nzLabel=\"En cours\" nzValue=\"en cours\"></nz-option>\n                          <nz-option  nzLabel=\"Clôturée\" nzValue=\"clôturée\"></nz-option>\n                          <nz-option  nzLabel=\"Reportée\" nzValue=\"reportée\"></nz-option>\n                          <nz-option  nzLabel=\"Annulée\" nzValue=\"annulée\"></nz-option>\n                        </nz-select>\n                        <div *ngIf=\"submitted && f.etat_session.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.etat_session.errors.required\">statut de session est obligatoire</div>\n                      </div>\n                      </div>\n                    <div class=\"row\">\n\n                      <!-- /.col -->\n                      <div class=\"col-12 mb-4 text-center\">\n                        <button  type=\"submit\"  [nzLoading]=\"isLoading\" nz-button nzType=\"primary\" nzBlock>Enregistrer</button>\n                      </div>\n                      <!-- /.col -->\n                    </div>\n                  </form>\n\n            </div>\n        </div>\n      </div>\n  </section>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-session',\n  templateUrl: './session.component.html',\n  styleUrls: ['./session.component.css']\n})\nexport class SessionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from 'src/app/admin/services/session.service';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-show-session',\n  templateUrl: './show-session.component.html',\n  styleUrls: ['./show-session.component.css']\n})\nexport class ShowSessionComponent implements OnInit {\n  id;\n  Result ;\n  Results ;\n  dateYestarday;\n   constructor(\n    private sessionService: SessionService, private route: ActivatedRoute\n   ) { }\n   ngOnInit(): void {\n     this.dateYestarday = moment(new Date()).add(-1, 'days').format('YYYY-MM-DD');\n     this.id = this.route.snapshot.paramMap.get('id');\n     this.sessionService.getSessionWithEmailById(this.id).subscribe((data: any) => {\n    this.Results = data.result[0];\n        });\n }\n\n}\n","<div class=\"content-wrapper\">\n\n    <section class=\"content\">\n\n      <div class=\"container-fluid\">\n        <div style=\"padding-top: 50px !important;\" class=\" text-right mt-5\">\n            <button *ngIf=\"Results?.date_fin > dateYestarday\" routerLink=\"/admin/list-session-cours-examen/session-cours/list-cours\" class=\"btn btn-success mr-2\">\n              <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n            </button>\n            <button *ngIf=\"Results?.date_fin < dateYestarday\" routerLink=\"/admin/list-session-cours-examen-inactive/session-cours/list-cours-inactive\" class=\"btn btn-success mr-2\">\n              <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n            </button>\n          </div>\n          <div class=\"row mb-2 mt-4\">\n            <div class=\"col-12 col-sm-6 col-md-12 col-lg-12 \">\n                <div class=\"card bg-light\">\n\n                  <div class=\"card-body pt-5\">\n                    <div class=\"row\">\n                      <div class=\"col-12\">\n                        <p class=\"lead text-muted\"> Référence:   <b>{{Results?.ref_formation    }}</b>  </p>\n                        <p *ngIf=\"Results?.version_session\" class=\"lead text-muted\">Version:  <b> {{Results?.version_session    }}</b></p>\n                        <p class=\"lead text-muted\">Durée:  <b> {{Results?.duree}}</b></p>\n                        <p *ngIf=\"Results?.affecter\" class=\"lead text-muted\">Instructeur :  <b> {{Results?.name  }}</b></p>\n                        <p class=\"lead text-muted\">Date de début:  <b> {{Results?.date_debut   | date}}</b></p>\n                        <p class=\"lead text-muted\">Date de fin:  <b>  {{Results?.date_fin   | date }} </b></p>\n                        <p class=\"lead text-muted\">Type:  <b> {{Results?.type   | titlecase }}</b></p>\n                        <p class=\"lead text-muted\">Langue:  <b>  {{Results?.langue   | titlecase }} </b></p>\n                        <p *ngIf=\"Results?.lieu\" class=\"lead text-muted\">Pays:  <b>  {{Results?.lieu   | titlecase }} </b></p>\n                        <p class=\"lead text-muted\">Statut de session:  <b>  {{Results?.etat_session   | titlecase }} </b></p>\n                      </div>\n\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n          </div>\n      </div>\n  </section>\n</div>\n","import { NotAdminGuardAllocation } from './../../guards/not-admin-guard.guard';\nimport { ShowSessionComponent } from './components/show-session/show-session.component';\nimport { ListSessionInactiveComponent } from './components/list-session-inactive/list-session-inactive.component';\nimport { ListSessionComponent } from './components/list-session/list-session.component';\nimport { SessionComponent } from './components/session/session.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddSessionComponent } from './components/add-session/add-session.component';\nimport { EditSessionComponent } from './components/edit-session/edit-session.component';\n\nconst routes: Routes = [\n  {path: '',\n  component: SessionComponent,\n  children: [\n   {\n      path: 'list-session',\n      component: ListSessionComponent,\n    },\n    {\n      path: 'list-session-inactive',\n      component: ListSessionInactiveComponent,\n    }\n    , {\n      path: 'add-session',\n      component: AddSessionComponent,\n      canActivate: [NotAdminGuardAllocation]\n    },\n     {\n      path: 'edit-session/:id',\n      component: EditSessionComponent,\n      canActivate: [NotAdminGuardAllocation]\n    },\n    {\n     path: 'show-session/:id',\n     component: ShowSessionComponent,\n   }\n  ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SessionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SessionRoutingModule } from './session-routing.module';\nimport { SessionComponent } from './components/session/session.component';\nimport { ListSessionComponent } from './components/list-session/list-session.component';\nimport { AddSessionComponent } from './components/add-session/add-session.component';\nimport { EditSessionComponent } from './components/edit-session/edit-session.component';\nimport { ListSessionInactiveComponent } from './components/list-session-inactive/list-session-inactive.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ShowSessionComponent } from './components/show-session/show-session.component';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\n@NgModule({\n  declarations: [SessionComponent, ListSessionComponent,\n     AddSessionComponent, EditSessionComponent,\n      ListSessionInactiveComponent, ShowSessionComponent],\n  imports: [\n    CommonModule,\n    SessionRoutingModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NzSelectModule,\n    NzTableModule,\n    NzInputModule,\n    NzSkeletonModule,\n    NzButtonModule\n  ]\n})\nexport class SessionModule { }\n"],"sourceRoot":"webpack:///"}