{"version":3,"sources":["./src/app/admin/sessions-examens/components/add-session-examen/add-session-examen.component.ts","./src/app/admin/sessions-examens/components/add-session-examen/add-session-examen.component.html","./src/app/admin/sessions-examens/components/edit-session-examen/edit-session-examen.component.ts","./src/app/admin/sessions-examens/components/edit-session-examen/edit-session-examen.component.html","./src/app/admin/sessions-examens/components/session-examen/session-examen.component.ts","./src/app/admin/sessions-examens/components/session-examen/session-examen.component.html","./src/app/admin/sessions-examens/components/show-session-examen/show-session-examen.component.ts","./src/app/admin/sessions-examens/components/show-session-examen/show-session-examen.component.html","./src/app/admin/sessions-examens/sessions-examens-routing.module.ts","./src/app/admin/sessions-examens/sessions-examens.module.ts"],"names":[],"mappings":"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","file":"sessions-examens-sessions-examens-module.js","sourcesContent":["import { SessionExamenService } from './../../../services/session-examen.service';\nimport { ExamenService } from './../../../services/examen.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport * as moment from 'moment';\nimport countries from 'src/app/countries.json';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\n\nimport { CategorieService } from 'src/app/admin/services/categorie.service';\nimport {en_US, fr_FR, NzI18nService } from 'ng-zorro-antd/i18n';\n\n@Component({\n  selector: 'app-add-session-examen',\n  templateUrl: './add-session-examen.component.html',\n  styleUrls: ['./add-session-examen.component.css']\n})\nexport class AddSessionExamenComponent implements OnInit {\n  SessionForm: FormGroup;\n  submitted = false;\n  displayRef = false;\n  displayVersion = false;\n  displayCountry = false;\n  cours = [];\n  testcours = [];\n  filtercours = [];\n  categories = [];\n  versions = [];\n  allCours = [];\n  todayDate;\n  verif = false;\n  title = 'json-file-read-angular';\n  today = new Date();\n  isLoading = false;\n  public countryList: { name: string }[] = countries;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    private examenService: ExamenService,\n    private sessionExamenService: SessionExamenService,\n    private categorieService: CategorieService,\n    private i18n: NzI18nService\n  ) { }\n\n  ngOnInit(): void {\n    this.i18n.setLocale(en_US);\n    this.fetchCategorie();\n    this.fetchCours();\n    this.fetchAllCours();\n    this.SessionForm = this.formBuilder.group({\n    ref_formation: ['', [Validators.required]],\n    version_session: ['', ],\n    cat_formation: ['', [Validators.required]],\n    date_debut: ['', [Validators.required]],\n    langue: ['', [Validators.required]],\n    lieu: ['', [Validators.required]],\n    etat_session: ['en attente de confirmation', [Validators.required]]\n  });\n  }\n\n   // convenience getter for easy access to form fields\n   get f()\n    { return this.SessionForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.SessionForm.invalid) {\n        return;\n    }\n    this.isLoading = true;\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.SessionForm.invalid) {\n        return;\n    }\n    const valueDateDebut = moment(this.SessionForm.value.date_debut).format('YYYY-MM-DD HH:mm:ss');\n    let  filterIdCour = [];\n    if (this.versions[0].version !== null && this.versions[0].version !== '') {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation && idcour.version === this.SessionForm.value.version_session;\n      });\n    } else {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation;\n      });\n    }\n    const session = {\n      id_examen: filterIdCour[0].id,\n      date_examen: valueDateDebut,\n      langue: this.SessionForm.value.langue,\n      lieu: this.SessionForm.value.lieu || null,\n      etat_session: this.SessionForm.value.etat_session\n    };\n    this.sessionExamenService.saveSession(session).subscribe((resp: any) => {\n      if (!resp.success) {\n        this.toastr.error('Erreur', resp.error);\n        this.isLoading = false;\n      } else {\n        this.toastr.success('Succès');\n        this.router.navigate(['/admin/list-session-cours-examen/session-examen/list-examen']);\n      }\n    });\n}\n\n   onchange(e){\n     if (e) {\n      this.displayRef = true;\n      this.displayVersion = false;\n      this.SessionForm.patchValue({\n        ref_formation: '',\n        version_session: ''\n      });\n      this.submitted = false;\n      this.filtercours = this.testcours.filter((cour: any) => {\n        return cour.categorie === this.SessionForm.value.cat_formation;\n      });\n      this.cours = this.filtercours.map((cour: any) => {\n        return cour;\n      });\n     }\n}\nchangeRef(e){\nif (e) {\n  this.versions = [];\n  this.SessionForm.patchValue({\n    version_session: '',\n  });\n  this.submitted = false;\n  this.examenService.getAllVersionByRef(this.SessionForm.value.ref_formation).subscribe((resp: any) => {\n    this.versions = resp.result;\n    if (this.versions[0].version !== null && this.versions[0].version !== '' ) {\n      this.displayVersion = true;\n      this.SessionForm.get('version_session').setValidators(Validators.required);\n    } else {\n     this.SessionForm.get('version_session').clearValidators();\n     this.displayVersion = false;\n     this.SessionForm.patchValue({\n      version_session: '',\n     });\n    }\n  });\n}\n}\nfetchCours(){\n  this.examenService.getAllDistinctCours().subscribe((data: any) => {\n    this.testcours = data.result;\n    this.cours = data.result;\n  });\n }\n fetchAllCours(){\n  this.examenService.getAllCours().subscribe((resp: any) => {\n    this.allCours = resp.results;\n  });\n }\n fetchCategorie(){\n  this.categorieService.getAllCategories().subscribe((data: any) => {\n    this.categories = data.results;\n  });\n }\n disabledDate = (current: Date): boolean => {\n  // Can not select days before today and today\n  return differenceInCalendarDays(current, this.today) < 0;\n}\n}\n","<div class=\"content-wrapper\">\n\n  <section class=\"content\">\n\n    <div class=\"container-fluid\">\n      <div style=\"padding-top: 50px !important;\" class=\" text-right mt-5\">\n        <button routerLink=\"/admin/list-session-cours-examen/session-examen/list-examen\" class=\"btn btn-success mr-2\">\n          <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n        </button>\n      </div>\n      <div class=\"row mb-2 padding-custom\">\n        <div class=\"col-sm-12 text-center mb-4\">\n          <h1 class=\"add-title\"  >Ajouter une session</h1>\n        </div>\n          <div class=\"col-12 col-md-6 mx-auto\">\n              <form  [formGroup]=\"SessionForm\" (ngSubmit)=\"onSubmit()\" >\n                <div  class=\"input-group mb-3\">\n                  <nz-select   nzPlaceHolder=\"Choisir une catégorie\" (ngModelChange)=\"onchange($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"cat_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.cat_formation.errors }\" >\n                    <nz-option *ngFor=\"let item of categories\" nzLabel=\"{{item.nom_categorie}}\" [nzValue]=\"item.nom_categorie\"></nz-option>\n                  </nz-select>\n                  <div *ngIf=\"submitted && f.cat_formation.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.cat_formation.errors.required\">catégorie est obligatoire</div>\n                </div>\n                </div>\n\n                    <div *ngIf=\"displayRef\" class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une référence\" (ngModelChange)=\"changeRef($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"ref_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.ref_formation.errors }\" >\n                        <nz-option *ngFor=\"let item of cours\" nzLabel=\"{{item.ref_form}}\" [nzValue]=\"item.ref_form\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.ref_formation.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.ref_formation.errors.required\">Référence est obligatoire</div>\n                    </div>\n                    </div>\n                     <div *ngIf=\"displayVersion\" class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une version\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"version_session\" [ngClass]=\"{ 'is-invalid': submitted && f.version_session.errors }\" >\n                        <nz-option *ngFor=\"let item_ses of versions\" nzLabel=\"{{item_ses.version}}\" [nzValue]=\"item_ses.version\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.version_session.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.version_session.errors.required\">version est obligatoire</div>\n                    </div>\n                    </div>\n                    <div class=\"input-group mb-3\" >\n                      <nz-date-picker\n                      [nzShowTime]=\"{ nzFormat: 'HH:mm' }\"\n                      [nzDisabledDate]=\"disabledDate\"\n                      nzFormat=\"yyyy-MM-dd HH:mm\"\n                      formControlName=\"date_debut\"\n                      nzPlaceHolder=\"Date\" [ngClass]=\"{ 'is-invalid': submitted && f.date_debut.errors }\"\n\n                    ></nz-date-picker>\n                    <div *ngIf=\"submitted && f.date_debut.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.date_debut.errors.required\">Date est obligatoire</div>\n                  </div>\n                    </div>\n                    <div  class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une langue\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"langue\" [ngClass]=\"{ 'is-invalid': submitted && f.langue.errors }\" >\n                        <nz-option  nzLabel=\"Français\" nzValue=\"français\"></nz-option>\n                        <nz-option  nzLabel=\"Anglais\" nzValue=\"anglais\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.langue.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.langue.errors.required\">langue est obligatoire</div>\n                    </div>\n                    </div>\n\n                    <div class=\"input-group mb-3\">\n                    <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir un pays\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"lieu\" [ngClass]=\"{ 'is-invalid': submitted && f.lieu.errors }\" >\n                      <nz-option *ngFor=\"let item of countryList\" nzLabel=\"{{item.name  |titlecase}}\" [nzValue]=\"item.name\"></nz-option>\n                    </nz-select>\n                    <div *ngIf=\"submitted && f.lieu.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.lieu.errors.required\">Pays est obligatoire</div>\n                  </div>\n                  </div>\n\n                    <div  class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une statut de session\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"etat_session\" [ngClass]=\"{ 'is-invalid': submitted && f.etat_session.errors }\" >\n                        <nz-option  nzLabel=\"En attente de confirmation\" nzValue=\"en attente de confirmation\"></nz-option>\n                        <nz-option  nzLabel=\"Confirmée\" nzValue=\"confirmée\"></nz-option>\n                        <nz-option  nzLabel=\"Reportée\" nzValue=\"reportée\"></nz-option>\n                        <nz-option  nzLabel=\"Annulée\" nzValue=\"annulée\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.etat_session.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.etat_session.errors.required\">statut de session est obligatoire</div>\n                    </div>\n                    </div>\n                  <div class=\"row\">\n\n                    <!-- /.col -->\n                    <div class=\"col-12 mb-4 text-center\">\n                      <button  type=\"submit\"  [nzLoading]=\"isLoading\" nz-button nzType=\"primary\" nzBlock>Enregistrer</button>\n                    </div>\n                    <!-- /.col -->\n                  </div>\n                </form>\n\n          </div>\n      </div>\n    </div>\n</section>\n</div>\n\n\n\n\n","import { PlanningExamensService } from 'src/app/admin/services/planning-examens.service';\nimport { SessionExamenService } from 'src/app/admin/services/session-examen.service';\nimport { ExamenService } from 'src/app/admin/services/examen.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as moment from 'moment';\nimport countries from 'src/app/countries.json';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CategorieService } from 'src/app/admin/services/categorie.service';\nimport {en_US, fr_FR, NzI18nService } from 'ng-zorro-antd/i18n';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\n@Component({\n  selector: 'app-edit-session-examen',\n  templateUrl: './edit-session-examen.component.html',\n  styleUrls: ['./edit-session-examen.component.css']\n})\nexport class EditSessionExamenComponent implements OnInit {\n  SessionForm: FormGroup;\n  submitted = false;\n  cours = [];\n  sessionEmail = [];\n  id;\n  newDateDebut: any;\n  Result;\n  year: any;\n  month: any;\n  day: any;\n  a: any;\n  //\n  displayRef = false;\n  displayVersion = false;\n  displayCountry = false;\n  allCours = [];\n  filtercours = [];\n  categories = [];\n  versions = [];\n  filtcategorie = [];\n  plannigBySession = [];\n  dateTodayVerif;\n  today = new Date();\n  title = 'json-file-read-angular';\n  isLoading = false;\n  public countryList: {name: string }[] = countries;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    private examenService: ExamenService,\n    private sessionExamenService: SessionExamenService,\n    private route: ActivatedRoute,\n    private categorieService: CategorieService,\n    private planningExamenService: PlanningExamensService,\n    private i18n: NzI18nService\n  ) { }\n\n   ngOnInit(): void {\n    this.i18n.setLocale(en_US);\n    const current = new Date();\n    this.dateTodayVerif = moment(new Date()).add(-1, 'days').format('YYYY-MM-DD');\n    this.fetchCategorie();\n    this.fetchAllCours();\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.fetchSessionWithEmail(this.id);\n    this.sessionExamenService.getSessionById(this.id).subscribe( async (resp: any) => {\n      this.Result = resp.result[0];\n      this.defautfetchCours();\n      this.defautversion();\n      this.SessionForm.patchValue({\n        cat_formation: this.Result.categorie,\n        ref_formation: this.Result.ref_formation,\n        version_session: this.Result.version_session,\n        date_debut: this.Result.date_examen,\n        langue: this.Result.langue,\n        lieu: this.Result.lieu,\n        etat_session: this.Result.etat_session\n      });\n    });\n    this.SessionForm = this.formBuilder.group({\n      cat_formation: ['', [Validators.required]],\n      ref_formation: ['', [Validators.required]],\n      date_debut: ['', [Validators.required]],\n      version_session: ['', ],\n      langue: ['', [Validators.required]],\n      lieu: ['', [Validators.required]],\n      etat_session: ['en attente de confirmation', [Validators.required]]\n    });\n  }\n\n   // convenience getter for easy access to form fields\n   get f()\n    { return this.SessionForm.controls; }\n\n   onSubmit(): void {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.SessionForm.invalid) {\n        return;\n    }\n    this.isLoading = true;\n    const valueDateDebut = moment(this.SessionForm.value.date_debut).format('YYYY-MM-DD HH:mm:ss');\n    let  filterIdCour = [];\n    if (this.versions[0].version !== null && this.versions[0].version !== '') {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation && idcour.version === this.SessionForm.value.version_session;\n      });\n    } else {\n       filterIdCour = this.allCours.filter(idcour => {\n        return idcour.ref_form === this.SessionForm.value.ref_formation ;\n      });\n    }\n    const session = {\n      id_examen: filterIdCour[0].id,\n      date_examen: valueDateDebut,\n      langue: this.SessionForm.value.langue,\n      lieu: this.SessionForm.value.lieu || null,\n      etat_session: this.SessionForm.value.etat_session\n    };\n    const dateEx = filterIdCour[0].duree.split(':');\n    const heure_d = dateEx[0];\n    const minute_d = dateEx[1];\n    let date_f =  moment(session.date_examen).add(heure_d, 'hours');\n    date_f =  moment(date_f).add(minute_d, 'minute');\n    const dateExam = moment(session.date_examen, 'DD-MM-YYYY HH:mm:ss');\n    const heure_debut = dateExam.format('HH:mm');\n    const heure_fin = date_f.format('HH:mm');\n    const heure_session = heure_debut + ' à ' + heure_fin;\n    this.sessionExamenService.updateSession(this.id, session).subscribe( async (resp: any) => {\n        if (!resp.success) {\n          this.toastr.error('Erreur', resp.error);\n          this.isLoading = false;\n        } else {\n          if (this.sessionEmail[0].email && session.etat_session !== 'en cours' && session.etat_session !== 'clôturée' ) {\n            if (this.versions[0].version !== null && this.versions[0].version !== '') {\n              // rien\n            } else {\n              this.SessionForm.value.version_session = null;\n            }\n            if (session.etat_session === 'annulée' || session.etat_session === 'reportée') {\n              this.plannigBySession[0].statut_f = 'Annulée';\n            }\n            if (session.etat_session === 'confirmée') {\n              this.plannigBySession[0].statut_f = 'Confirmée';\n            }\n            const resuls = await this.envoyerEmail(this.sessionEmail[0].email, this.SessionForm.value.ref_formation,\n                 moment(session.date_examen).format('DD-MM-YYYY'), heure_session,\n               session.langue, this.SessionForm.value.version_session, this.plannigBySession[0].statut_f, session.etat_session,\n              this.sessionEmail[0].name, filterIdCour[0].designation, session.lieu, this.plannigBySession[0].nbr_participant);\n\n          }\n          if (this.sessionEmail[0].email && session.etat_session !== 'en cours' && session.etat_session !== 'clôturée' &&\n           session.etat_session !== 'confirmée' && session.etat_session !== 'en attente de confirmation') {\n             const p = {\n               id: this.plannigBySession[0].id,\n               statut_f: 'annulée'\n             };\n\n             this.planningExamenService.editPlanningForSession(p).subscribe((d: any) => {\n              if (!d.success) {\n                this.toastr.error('Erreur', d.error);\n              }});\n          }\n          if (this.sessionEmail[0].email && session.etat_session === 'confirmée') {\n             const pl = {\n               id: this.plannigBySession[0].id,\n               statut_f: 'Confirmée'\n             };\n             this.planningExamenService.editPlanningForSession(pl).subscribe((d: any) => {\n              if (!d.success) {\n                this.toastr.error('Erreur', d.error);\n              }});\n          }\n          this.toastr.success('Succès');\n          this.router.navigate(['/admin/list-session-cours-examen/session-examen/list-examen']);\n        }\n      });\n  }\n   fetchAllCours(){\n    this.examenService.getAllCours().subscribe((resp: any) => {\n      this.allCours = resp.results;\n    });\n   }\n   defautfetchCours() {\n    this.examenService.getAllDistinctCours().subscribe((data: any) => {\n      this.cours = data.result;\n      this.filtercours = this.cours.filter((cour: any) => {\n        return cour.categorie === this.Result.categorie;\n      });\n    });\n }\n   fetchSessionWithEmail(id) {\n    this.sessionExamenService.getSessionWithEmailById(id).subscribe((data: any) => {\n      this.sessionEmail = data.result;\n    });\n    this.planningExamenService.getPlanningUpdatedByIdSession(this.id).subscribe( (resp: any) => {\n      this.plannigBySession = resp.result;\n  });\n   }\n   fetchCategorie(){\n    this.categorieService.getAllCategories().subscribe((data: any) => {\n      this.categories = data.results;\n    });\n   }\n   onchange(e){\n     if (e) {\n      this.submitted = false;\n      this.displayVersion = false;\n      this.SessionForm.patchValue({\n        ref_formation: '',\n        version_session: '',\n      });\n      this.filtercours = [];\n      this.filtercours = this.cours.filter((cour: any) => {\n        return cour.categorie === this.SessionForm.value.cat_formation;\n      });\n     }\n  }\n  changeRef(e){\n    if (e && this.SessionForm.value.ref_formation) {\n      this.submitted = false;\n      this.versions = [];\n      this.SessionForm.patchValue({\n        version_session: '',\n      });\n      this.examenService.getAllVersionByRef(this.SessionForm.value.ref_formation).subscribe((resp: any) => {\n        this.versions = resp.result;\n        if (this.versions[0].version !== null && this.versions[0].version !== '') {\n          this.displayVersion = true;\n          this.SessionForm.get('version_session').setValidators(Validators.required);\n        } else {\n          this.SessionForm.get('version_session').clearValidators();\n          this.displayVersion = false;\n        }\n      });\n    }\n\n  }\n  defautversion(){\n    this.versions = [];\n    this.examenService.getAllVersionByRef(this.Result.ref_formation).subscribe((resp: any) => {\n      this.versions = resp.result;\n      if (this.versions[0].version !== null && this.versions[0].version !== '') {\n        this.displayVersion = true;\n        this.SessionForm.get('version_session').setValidators(Validators.required);\n      } else {\n        this.SessionForm.get('version_session').clearValidators();\n        this.displayVersion = false;\n      }\n    });\n  }\n  envoyerEmail(email, ref, dated, heure, langue, version, etat , etatsession,\n    namef, namecours, pays, nbrpartic){\n    this.sessionExamenService.envoyerEmailFormateur(email, ref, dated, heure, langue,\n      version, etat, etatsession,  namef, namecours, pays, nbrpartic).subscribe((resp: any) => {\n    if (!resp.success) {\n        this.toastr.error('Error', resp.error);\n      }\n    });\n   }\n   disabledDate = (current: Date): boolean => {\n    // Can not select days before today and today\n    return differenceInCalendarDays(current, this.today) < 0;\n  }\n}\n","<div class=\"content-wrapper\">\n\n  <section class=\"content\">\n\n    <div class=\"container-fluid\">\n      <div style=\"padding-top: 50px !important;\" class=\" text-right mt-5\">\n        <button routerLink=\"/admin/list-session-cours-examen/session-examen/list-examen\" class=\"btn btn-success mr-2\">\n          <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n        </button>\n      </div>\n      <div class=\"row mb-2\">\n        <div class=\"col-sm-12 text-center  mb-4\">\n          <h1 class=\"edit-title\"  > Modifier une session</h1>\n        </div>\n          <div class=\"col-12 col-md-6 mx-auto\">\n              <form  [formGroup]=\"SessionForm\" (ngSubmit)=\"onSubmit()\" >\n                <div  class=\"input-group mb-3\">\n                  <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une catégorie\" (ngModelChange)=\"onchange($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"cat_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.cat_formation.errors }\" >\n                    <nz-option *ngFor=\"let item of categories\" nzLabel=\"{{item.nom_categorie}}\" [nzValue]=\"item.nom_categorie\"></nz-option>\n                  </nz-select>\n                  <div *ngIf=\"submitted && f.cat_formation.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.cat_formation.errors.required\">catégorie est obligatoire</div>\n                </div>\n                </div>\n                <div  class=\"input-group mb-3\">\n                  <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une référence\" (ngModelChange)=\"changeRef($event)\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"ref_formation\" [ngClass]=\"{ 'is-invalid': submitted && f.ref_formation.errors }\" >\n                    <nz-option *ngFor=\"let itemRef of filtercours\" nzLabel=\"{{itemRef.ref_form}}\" [nzValue]=\"itemRef.ref_form\"></nz-option>\n                  </nz-select>\n                  <div *ngIf=\"submitted && f.ref_formation.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.ref_formation.errors.required\">Référence est obligatoire</div>\n                </div>\n                </div>\n                <div *ngIf=\"displayVersion\" class=\"input-group mb-3\">\n                  <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une version\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"version_session\" [ngClass]=\"{ 'is-invalid': submitted && f.version_session.errors }\" >\n                    <nz-option *ngFor=\"let item_ses of versions\" nzLabel=\"{{item_ses.version}}\" [nzValue]=\"item_ses.version\"></nz-option>\n                  </nz-select>\n                  <div *ngIf=\"submitted && f.version_session.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.version_session.errors.required\">version est obligatoire</div>\n                </div>\n                </div>\n                <div class=\"input-group mb-3\" >\n                  <nz-date-picker\n                  [nzShowTime]=\"{ nzFormat: 'HH:mm' }\"\n                  [nzDisabledDate]=\"disabledDate\"\n                  nzFormat=\"yyyy-MM-dd HH:mm\"\n                  formControlName=\"date_debut\"\n                  nzPlaceHolder=\"Date\" [ngClass]=\"{ 'is-invalid': submitted && f.date_debut.errors }\"\n                ></nz-date-picker>\n                <div *ngIf=\"submitted && f.date_debut.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.date_debut.errors.required\">Date est obligatoire</div>\n              </div>\n                </div>\n                    <div  class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une langue\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"langue\" [ngClass]=\"{ 'is-invalid': submitted && f.langue.errors }\" >\n                        <nz-option  nzLabel=\"Français\" nzValue=\"français\"></nz-option>\n                        <nz-option  nzLabel=\"Anglais\" nzValue=\"anglais\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.langue.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.langue.errors.required\">langue est obligatoire</div>\n                    </div>\n                    </div>\n                    <div class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir un pays\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"lieu\" [ngClass]=\"{ 'is-invalid': submitted && f.lieu.errors }\" >\n                        <nz-option *ngFor=\"let item of countryList\" nzLabel=\"{{item.name  |titlecase}}\" [nzValue]=\"item.name\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.lieu.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.lieu.errors.required\">Pays est obligatoire</div>\n                    </div>\n                    </div>\n                    <div  class=\"input-group mb-3\">\n                      <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Choisir une statut de session\" [nzNotFoundContent]=\"'Pas de résultat'\" formControlName=\"etat_session\" [ngClass]=\"{ 'is-invalid': submitted && f.etat_session.errors }\" >\n                        <nz-option  nzLabel=\"En attente de confirmation\" nzValue=\"en attente de confirmation\"></nz-option>\n                        <nz-option  nzLabel=\"Confirmée\" nzValue=\"confirmée\"></nz-option>\n                        <nz-option  nzLabel=\"En cours\" nzValue=\"en cours\"></nz-option>\n                        <nz-option  nzLabel=\"Clôturée\" nzValue=\"clôturée\"></nz-option>\n                        <nz-option  nzLabel=\"Reportée\" nzValue=\"reportée\"></nz-option>\n                        <nz-option  nzLabel=\"Annulée\" nzValue=\"annulée\"></nz-option>\n                      </nz-select>\n                      <div *ngIf=\"submitted && f.etat_session.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.etat_session.errors.required\">statut de session est obligatoire</div>\n                    </div>\n                    </div>\n                  <div class=\"row\">\n\n                    <!-- /.col -->\n                    <div class=\"col-12 mb-4 text-center\">\n                      <button  type=\"submit\"  [nzLoading]=\"isLoading\" nz-button nzType=\"primary\" nzBlock>Enregistrer</button>\n                    </div>\n                    <!-- /.col -->\n                  </div>\n                </form>\n\n          </div>\n      </div>\n    </div>\n</section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-session-examen',\n  templateUrl: './session-examen.component.html',\n  styleUrls: ['./session-examen.component.css']\n})\nexport class SessionExamenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { SessionExamenService } from './../../../services/session-examen.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-show-session-examen',\n  templateUrl: './show-session-examen.component.html',\n  styleUrls: ['./show-session-examen.component.css']\n})\nexport class ShowSessionExamenComponent implements OnInit {\n  id;\n  Result ;\n  Results ;\n  dateYestarday;\n   constructor(\n    private sessionExamenService: SessionExamenService, private route: ActivatedRoute\n   ) { }\n   ngOnInit(): void {\n     this.dateYestarday = moment(new Date()).add(-1, 'days').format('YYYY-MM-DD');\n     this.id = this.route.snapshot.paramMap.get('id');\n     this.sessionExamenService.getSessionWithEmailById(this.id).subscribe((data: any) => {\n    this.Results = data.result[0];\n        });\n }\n\n}\n","<div class=\"content-wrapper\">\n  <section class=\"content\">\n    <div class=\"container-fluid\">\n      <div style=\"padding-top: 50px !important;\" class=\" text-right mt-5\">\n          <button *ngIf=\"Results?.date_examen > dateYestarday\" routerLink=\"/admin/list-session-cours-examen/session-examen/list-examen\" class=\"btn btn-success mr-2\">\n            <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n          </button>\n          <button *ngIf=\"Results?.date_examen < dateYestarday\" routerLink=\"/admin/list-session-cours-examen-inactive/session-examen/list-examen-inactive\" class=\"btn btn-success mr-2\">\n            <i class=\"fas fa-arrow-alt-circle-left\"></i> Retour\n          </button>\n        </div>\n        <div class=\"row mb-2 mt-4\">\n          <div class=\"col-12 col-sm-6 col-md-12 col-lg-12 \">\n              <div class=\"card bg-light\">\n                <div class=\"card-body pt-5\">\n                  <div class=\"row\">\n                    <div class=\"col-12\">\n                      <p class=\"lead text-muted\"> Référence:   <b>{{Results?.ref_formation    }}</b>  </p>\n                      <p *ngIf=\"Results?.version_session\" class=\"lead text-muted\">Version:  <b> {{Results?.version_session    }}</b></p>\n                      <p class=\"lead text-muted\">Durée:  <b> {{Results?.duree}}</b></p>\n                      <p *ngIf=\"Results?.affecter\" class=\"lead text-muted\">Instructeur :  <b> {{Results?.name  }}</b></p>\n                      <p class=\"lead text-muted\">Date:  <b> {{Results?.date_examen   | date}}</b></p>\n                      <p class=\"lead text-muted\">Langue:  <b>  {{Results?.langue   | titlecase }} </b></p>\n                      <p *ngIf=\"Results?.lieu\" class=\"lead text-muted\">Pays:  <b>  {{Results?.lieu   | titlecase }} </b></p>\n                      <p class=\"lead text-muted\">Statut de session:  <b>  {{Results?.etat_session   | titlecase }} </b></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>\n</section>\n</div>\n\n","import { NotAdminGuardAllocation } from './../../guards/not-admin-guard.guard';\nimport { ShowSessionExamenComponent } from './components/show-session-examen/show-session-examen.component';\nimport { EditSessionExamenComponent } from './components/edit-session-examen/edit-session-examen.component';\nimport { AddSessionExamenComponent } from './components/add-session-examen/add-session-examen.component';\nimport { ListSessionExamenInactiveComponent } from './components/list-session-examen-inactive/list-session-examen-inactive.component';\nimport { ListSessionExamenComponent } from './components/list-session-examen/list-session-examen.component';\nimport { SessionExamenComponent } from './components/session-examen/session-examen.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '',\n  component: SessionExamenComponent,\n  children: [\n   {\n      path: 'list-session-examan',\n      component: ListSessionExamenComponent,\n    },\n    {\n      path: 'list-session-examan-inactive',\n      component: ListSessionExamenInactiveComponent,\n    }\n    , {\n      path: 'add-session-examan',\n      component: AddSessionExamenComponent,\n      canActivate: [NotAdminGuardAllocation]\n    },\n     {\n      path: 'edit-session-examan/:id',\n      component: EditSessionExamenComponent,\n      canActivate: [NotAdminGuardAllocation]\n    },\n    {\n     path: 'show-session-examan/:id',\n     component: ShowSessionExamenComponent,\n   }\n  ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SessionsExamensRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SessionsExamensRoutingModule } from './sessions-examens-routing.module';\nimport { AddSessionExamenComponent } from './components/add-session-examen/add-session-examen.component';\nimport { EditSessionExamenComponent } from './components/edit-session-examen/edit-session-examen.component';\nimport { ListSessionExamenComponent } from './components/list-session-examen/list-session-examen.component';\nimport { ListSessionExamenInactiveComponent } from './components/list-session-examen-inactive/list-session-examen-inactive.component';\nimport { SessionExamenComponent } from './components/session-examen/session-examen.component';\nimport { ShowSessionExamenComponent } from './components/show-session-examen/show-session-examen.component';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\n@NgModule({\n  declarations: [AddSessionExamenComponent, EditSessionExamenComponent,\n     ListSessionExamenComponent, ListSessionExamenInactiveComponent,\n      SessionExamenComponent, ShowSessionExamenComponent],\n  imports: [\n    CommonModule,\n    SessionsExamensRoutingModule,\n    Ng2SearchPipeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NzSelectModule,\n    NzTableModule,\n    NzInputModule,\n    NzSkeletonModule,\n    NzDatePickerModule,\n    NzTimePickerModule,\n    NzButtonModule\n  ],\n})\nexport class SessionsExamensModule { }\n"],"sourceRoot":"webpack:///"}