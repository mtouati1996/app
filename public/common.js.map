{"version":3,"sources":["./src/app/admin/services/formateur.service.ts","./src/app/admin/services/fournisseur.service.ts","./src/app/admin/services/utilisateur.service.ts","./src/app/guards/not-admin-guard.guard.ts","./src/app/guards/not-admin-session.guard.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { environment } from './../../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormateurService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n  getAllFormateur(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/lists`);\n  }\n  getAllUser(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/allusers/lists`);\n  }\n  getAllExaminateur(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/examinateur/lists`);\n  }\n  getAllExaminateurForPlanning(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/examinateur/planning/lists`);\n  }\n  getAllFormateurInactive(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/lists/inactive`);\n  }\n  getAllExaminateurInactive(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/examinateur/lists/inactive`);\n  }\n  saveFormateur(formateur): Observable<any> {\n    return this.http.post(`${environment.apiUrlIns}/utilisateur/register`, formateur);\n  }\n  deleteFormateur(id): Observable<any> {\n    return this.http.put(`${environment.apiUrlIns}/utilisateur/delete/${id}`, null);\n  }\n  formateurReturnActive(id): Observable<any> {\n    return this.http.put(`${environment.apiUrlIns}/utilisateur/returnactive/${id}`, null);\n  }\n  ExaminateurReturnActive(id): Observable<any> {\n    return this.http.put(`${environment.apiUrlIns}/utilisateur/examinateur/returnactive/${id}`, null);\n  }\n  deleteExaminateur(id): Observable<any> {\n    return this.http.put(`${environment.apiUrlIns}/utilisateur/examinateur/deleteexaminateur/${id}`, null);\n  }\n  getFormateurById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/list/${id}`);\n  }\n  getAllFormateurCertifById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/lists/certif/${id}`);\n  }\n  getAllFormateurCvById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/lists/cv/${id}`);\n  }\n  downloadCertifById(name, email): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/certif/download/${name}/${email}` , {responseType: 'blob' as 'json'});\n   }\n  downloadCvById(name, email): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/cv/download/${name}/${email}`, {responseType: 'blob' as 'json'});\n  }\n  deleteCertifById(name, email): Observable<any> {\n    return this.http.delete(`${environment.apiUrlInsUpload}/formateur/upload/certif/delete/${name}/${email}`);\n   }\n   deleteCvById(name, email): Observable<any> {\n    return this.http.delete(`${environment.apiUrlInsUpload}/formateur/upload/cv/delete/${name}/${email}`);\n   }\n  editFormateur(id,formateur): Observable<any> {\n    return this.http.put(`${environment.apiUrlIns}/utilisateur/edit/${id}`, formateur);\n  }\n  changePassword(id, email): Observable<any>  {\n    return this.http.put(`${environment.apiUrlIns}/utilisateur/editPassword/${id}/${email}`, null);\n  }\n  saveCertifFormateur(email, idajouter, file) {\n    return this.http.post(`${environment.apiUrlInsUpload}/formateur/upload/add/certif/${email}/${idajouter}`, file);\n  }\n  saveCvFormateur(email, idajouter, file) {\n    return this.http.post(`${environment.apiUrlInsUpload}/formateur/upload/add/cv/${email}/${idajouter}`, file);\n  }\n  // user with role\n  getAllUserWithRole(): Observable<any> {\n    return this.http.get(`${environment.apiUrlIns}/utilisateur/role/lists`);\n  }\n  postUserWithRole(user): Observable<any> {\n    return this.http.post(`${environment.apiUrlIns}/utilisateur/role/register`, user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FournisseurService {\n\n  constructor( private http: HttpClient) { }\n  getAllFournisseurWithoutAdress(): Observable<any> {\n    return this.http.get(`${environment.apiUrlFourniss}/fournisseur/lists`);\n  }\n  getAllFournisseurInactive(): Observable<any> {\n    return this.http.get(`${environment.apiUrlFourniss}/fournisseur/lists/inactive`);\n  }\n  deleteFournisseur(id): Observable<any> {\n    return this.http.put(`${environment.apiUrlFourniss}/fournisseur/delete/${id}` , null);\n  }\n  getFournisseurById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlFourniss}/fournisseur/lists/four/${id}`);\n  }\n  saveFournisseur(fournisseur): Observable<any> {\n    return this.http.post(`${environment.apiUrlFourniss}/fournisseur/add` , fournisseur);\n  }\n  updateFournisseur(id, fournisseur): Observable<any> {\n    return this.http.put(`${environment.apiUrlFourniss}/fournisseur/update/${id}`, fournisseur);\n  }\n  ReturnFournisseurActive(id): Observable<any> {\n    return this.http.put(`${environment.apiUrlFourniss}/fournisseur/returnactive/${id}`, null);\n  }\n\n\n  //pour effacer\n  getAdressFournisseurById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlFourniss}/fournisseur/lists/four/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from './../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilisateurService {\n\n  constructor(private http: HttpClient) { }\n  getAllFormateurInterne(): Observable<any> {\n    return this.http.get(`${environment.apiUrlUtilisateurs}/utilisateurs/list/interne`);\n  }\n  getAllFormateurExterne(): Observable<any> {\n    return this.http.get(`${environment.apiUrlUtilisateurs}/utilisateurs/list/externe`);\n  }\n  saveUtilisateur(utilisateur): Observable<any> {\n    return this.http.post(`${environment.apiUrlUtilisateurs}/utilisateurs/register`, utilisateur);\n  }\n\n  getUtilisateurById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlUtilisateurs}/utilisateurs/lists/${id}`);\n  }\n  editUtilisateur(id, utilisateur): Observable<any> {\n    return this.http.put(`${environment.apiUrlUtilisateurs}/utilisateurs/edit/${id}`, utilisateur);\n  }\n\n   // start service upload\n   getAllFormateurCertifById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/lists/certif/${id}`);\n  }\n     saveCertifUtilisateur(email, idajouter, file): Observable<any> {\n    return this.http.post(`${environment.apiUrlInsUpload}/formateur/upload/add/certif/${email}/${idajouter}`, file);\n  }\n  saveCvUtilisateur(email, idajouter, file): Observable<any> {\n    return this.http.post(`${environment.apiUrlInsUpload}/formateur/upload/add/cv/${email}/${idajouter}`, file);\n  }\n  getAllFormateurCvById(id): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/lists/cv/${id}`);\n  }\n  downloadCertifById(name, email): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/certif/download/${name}/${email}` , {responseType: 'blob' as 'json'});\n   }\n  downloadCvById(name, email): Observable<any> {\n    return this.http.get(`${environment.apiUrlInsUpload}/formateur/upload/cv/download/${name}/${email}`, {responseType: 'blob' as 'json'});\n  }\n  deleteCertifById(name, email): Observable<any> {\n    return this.http.delete(`${environment.apiUrlInsUpload}/formateur/upload/certif/delete/${name}/${email}`);\n   }\n   deleteCvById(name, email): Observable<any> {\n    return this.http.delete(`${environment.apiUrlInsUpload}/formateur/upload/cv/delete/${name}/${email}`);\n   }\n   // end service upload\n   getAllUser(): Observable<any> {\n    return this.http.get(`${environment.apiUrlUtilisateurs}/utilisateurs/allusers/lists`);\n  }\n  changePassword(id, email): Observable<any>  {\n    return this.http.put(`${environment.apiUrlUtilisateurs}/utilisateurs/editPassword/${id}/${email}`, null);\n  }\n  deleteUtilisateur(id, verif): Observable<any> {\n    return this.http.put(`${environment.apiUrlUtilisateurs}/utilisateurs/delete/${id}/${verif}`, null);\n  }\n\n  deleteUtilisateurInstructeur(id): Observable<any> {\n    return this.http.delete(`${environment.apiUrlUtilisateurs}/utilisateurs/deleteUtilisateurInstructeur/${id}`);\n    }\n  deleteUtilisateurExaminateur(id): Observable<any> {\n      return this.http.delete(`${environment.apiUrlUtilisateurs}/utilisateurs/deleteUtilisateurExaminateur/${id}`);\n      }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotAdminGuardAllocation implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.authService.notAdminAllocations()) {\n        return true;\n      }\n      this.authService.Logout();\n      this.router.navigate(['/auth/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotAdminSessionGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (this.authService.notAdminSessions()) {\n        return true;\n      }\n      this.authService.Logout();\n      this.router.navigate(['/auth/login']);\n  }\n}\n"],"sourceRoot":"webpack:///"}